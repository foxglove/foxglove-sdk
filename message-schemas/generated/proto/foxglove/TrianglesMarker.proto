// Generated from TrianglesMarker by @foxglove/message-schemas

syntax = "proto3";

import "foxglove/Color.proto";
import "foxglove/Duration.proto";
import "foxglove/KeyValuePair.proto";
import "foxglove/Point3.proto";
import "foxglove/Pose.proto";
import "foxglove/Time.proto";
import "foxglove/TriangleType.proto";

package foxglove;

// A marker representing a set of triangles or a surface tiled by triangles
message TrianglesMarker {
  // Timestamp of the marker
  foxglove.Time timestamp = 1;

  // Frame of reference
  string frame_id = 2;

  // Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`.
  string namespace = 3;

  // Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`.
  string id = 4;

  // Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted.
  foxglove.Duration lifetime = 5;

  // Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)
  bool frame_locked = 6;

  // Additional user-provided metadata associated with the marker. Keys must be unique.
  repeated foxglove.KeyValuePair metadata = 7;

  // Drawing primitive to use for triangles
  foxglove.TriangleType type = 8;

  // Origin of triangles relative to reference frame
  foxglove.Pose pose = 9;

  // Vertices to use for triangles
  repeated foxglove.Point3 points = 10;

  // Solid color to use for the whole shape. One of `color` or `colors` must be provided.
  foxglove.Color color = 11;

  // Per-vertex colors (if specified, must have the same length as `points`). One of `color` or `colors` should be provided.
  repeated foxglove.Color colors = 12;

  // Indexes into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data.
  repeated fixed32 indices = 13;
}
