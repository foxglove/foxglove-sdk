{
  "$comment": "Generated from ModelMarker by @foxglove/message-schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "description": "Timestamp of the marker",
      "type": "object",
      "properties": {
        "sec": {
          "type": "integer"
        },
        "nsec": {
          "type": "integer"
        }
      }
    },
    "frame_id": {
      "description": "Frame of reference",
      "type": "string"
    },
    "namespace": {
      "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`.",
      "type": "string"
    },
    "id": {
      "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`.",
      "type": "string"
    },
    "lifetime": {
      "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted.",
      "type": "object",
      "properties": {
        "sec": {
          "type": "integer"
        },
        "nsec": {
          "type": "integer"
        }
      }
    },
    "frame_locked": {
      "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)",
      "type": "boolean"
    },
    "metadata": {
      "type": "array",
      "items": {
        "description": "Additional user-provided metadata associated with the marker. Keys must be unique.",
        "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key",
            "type": "string"
          },
          "value": {
            "description": "Value",
            "type": "string"
          }
        }
      }
    },
    "pose": {
      "description": "Origin of model relative to reference frame",
      "$comment": "Generated from Pose by @foxglove/message-schemas",
      "type": "object",
      "properties": {
        "position": {
          "description": "Point denoting position in 3D space",
          "$comment": "Generated from Vector3 by @foxglove/message-schemas",
          "type": "object",
          "properties": {
            "x": {
              "description": "x coordinate length",
              "type": "number"
            },
            "y": {
              "description": "y coordinate length",
              "type": "number"
            },
            "z": {
              "description": "z coordinate length",
              "type": "number"
            }
          }
        },
        "orientation": {
          "description": "Quaternion denoting orientation in 3D space",
          "$comment": "Generated from Quaternion by @foxglove/message-schemas",
          "type": "object",
          "properties": {
            "x": {
              "description": "x value",
              "type": "number"
            },
            "y": {
              "description": "y value",
              "type": "number"
            },
            "z": {
              "description": "z value",
              "type": "number"
            },
            "w": {
              "description": "w value",
              "type": "number"
            }
          }
        }
      }
    },
    "scale": {
      "description": "Scale factor to apply to the model along each axis",
      "$comment": "Generated from Vector3 by @foxglove/message-schemas",
      "type": "object",
      "properties": {
        "x": {
          "description": "x coordinate length",
          "type": "number"
        },
        "y": {
          "description": "y coordinate length",
          "type": "number"
        },
        "z": {
          "description": "z coordinate length",
          "type": "number"
        }
      }
    },
    "color": {
      "description": "Solid color to use for the whole model. If `use_embedded_materials` is true, this color is blended on top of the embedded material color.",
      "$comment": "Generated from Color by @foxglove/message-schemas",
      "type": "object",
      "properties": {
        "r": {
          "description": "Red value between 0 and 1",
          "type": "number"
        },
        "g": {
          "description": "Green value between 0 and 1",
          "type": "number"
        },
        "b": {
          "description": "Blue value between 0 and 1",
          "type": "number"
        },
        "a": {
          "description": "Alpha value between 0 and 1",
          "type": "number"
        }
      }
    },
    "use_embedded_materials": {
      "description": "Whether to use materials embedded in the model, or only the `color`",
      "type": "boolean"
    },
    "url": {
      "description": "URL pointing to model file. Either `url` or `mime_type` and `data` should be provided.",
      "type": "string"
    },
    "mime_type": {
      "description": "MIME type of embedded model (e.g. `model/gltf-binary`). Either `url` or `mime_type` and `data` should be provided.",
      "type": "string"
    },
    "data": {
      "type": "string",
      "description": "Embedded model. Either `url` or `mime_type` and `data` should be provided.",
      "contentEncoding": "base64"
    }
  }
}
