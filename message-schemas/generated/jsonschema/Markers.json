{
  "$comment": "Generated from Markers by @foxglove/message-schemas",
  "title": "Markers",
  "description": "A list that can contain any number of any type of marker",
  "type": "object",
  "properties": {
    "deletions": {
      "type": "array",
      "items": {
        "$comment": "Generated from MarkerDeletion by @foxglove/message-schemas",
        "title": "MarkerDeletion",
        "description": "Deletion command to remove previously published markers",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker. Only matching markers earlier than this timestamp will be deleted."
          },
          "type": {
            "title": "MarkerDeletionType: An enumeration indicating which markers should match a MarkerDeletion command",
            "description": "Type of deletion action to perform",
            "oneOf": [
              {
                "title": "MATCHING_NAMESPACE_AND_ID",
                "const": 0
              },
              {
                "title": "MATCHING_NAMESPACE",
                "const": 1
              },
              {
                "title": "ALL",
                "const": 2
              }
            ]
          },
          "namespace": {
            "type": "string",
            "description": "Namespace which must match if `kind` is `MATCHING_NAMESPACE_AND_ID` or `MATCHING_NAMESPACE`."
          },
          "id": {
            "type": "string",
            "description": "Numeric identifier which must match if `kind` is `MATCHING_NAMESPACE_AND_ID`."
          }
        }
      },
      "description": "Marker deletion actions"
    },
    "arrows": {
      "type": "array",
      "items": {
        "$comment": "Generated from ArrowMarker by @foxglove/message-schemas",
        "title": "ArrowMarker",
        "description": "A marker representing an arrow",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Position of the arrow's tail and orientation of the arrow. Identity orientation means the arrow points in the +x direction.",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "length": {
            "type": "number",
            "description": "Length of the arrow"
          },
          "shaft_diameter": {
            "type": "number",
            "description": "Diameter of the arrow shaft"
          },
          "head_diameter": {
            "type": "number",
            "description": "Diameter of the arrow head"
          },
          "head_length": {
            "type": "number",
            "description": "Length of the arrow head"
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Color of the arrow",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          }
        }
      },
      "description": "Arrow markers"
    },
    "cubes": {
      "type": "array",
      "items": {
        "$comment": "Generated from CubeMarker by @foxglove/message-schemas",
        "title": "CubeMarker",
        "description": "A marker representing a cube or rectangular prism",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Position of the center of the cube and orientation of the cube",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "size": {
            "$comment": "Generated from Vector3 by @foxglove/message-schemas",
            "title": "Vector3",
            "description": "Size of the cube along each axis",
            "type": "object",
            "properties": {
              "x": {
                "type": "number",
                "description": "x coordinate length"
              },
              "y": {
                "type": "number",
                "description": "y coordinate length"
              },
              "z": {
                "type": "number",
                "description": "z coordinate length"
              }
            }
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Color of the arrow",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          }
        }
      },
      "description": "Cube markers"
    },
    "spheres": {
      "type": "array",
      "items": {
        "$comment": "Generated from SphereMarker by @foxglove/message-schemas",
        "title": "SphereMarker",
        "description": "A marker representing a sphere or ellipsoid",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Position of the center of the sphere and orientation of the sphere",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "size": {
            "$comment": "Generated from Vector3 by @foxglove/message-schemas",
            "title": "Vector3",
            "description": "Size (diameter) of the sphere along each axis",
            "type": "object",
            "properties": {
              "x": {
                "type": "number",
                "description": "x coordinate length"
              },
              "y": {
                "type": "number",
                "description": "y coordinate length"
              },
              "z": {
                "type": "number",
                "description": "z coordinate length"
              }
            }
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Color of the sphere",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          }
        }
      },
      "description": "Sphere markers"
    },
    "cylinders": {
      "type": "array",
      "items": {
        "$comment": "Generated from CylinderMarker by @foxglove/message-schemas",
        "title": "CylinderMarker",
        "description": "A marker representing a cylinder or elliptic cylinder",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Position of the center of the cylinder and orientation of the cylinder. The cylinder's flat faces are perpendicular to the z-axis.",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "bottom_radius": {
            "type": "number",
            "description": "Radius of the cylinder at min z"
          },
          "top_radius": {
            "type": "number",
            "description": "Radius of the cylinder at max z"
          },
          "height": {
            "type": "number",
            "description": "Height of the cylinder along the z axis"
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Color of the sphere",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          }
        }
      },
      "description": "Cylinder markers"
    },
    "lines": {
      "type": "array",
      "items": {
        "$comment": "Generated from LineMarker by @foxglove/message-schemas",
        "title": "LineMarker",
        "description": "A marker representing a series of points connected by lines",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "type": {
            "title": "LineType: An enumeration indicating how input points should be interpreted to create lines",
            "description": "Drawing primitive to use for lines",
            "oneOf": [
              {
                "title": "LINE_STRIP",
                "const": 0,
                "description": "0-1, 1-2, ..., (n-1)-n"
              },
              {
                "title": "LINE_LOOP",
                "const": 1,
                "description": "0-1, 1-2, ..., (n-1)-n, n-0"
              },
              {
                "title": "LINE_LIST",
                "const": 2,
                "description": "0-1, 2-3, 4-5, ..."
              }
            ]
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Origin of lines relative to reference frame",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "thickness": {
            "type": "number",
            "description": "Line thickness"
          },
          "scale_invariant": {
            "type": "boolean",
            "description": "Indicates whether `thickness` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)"
          },
          "points": {
            "type": "array",
            "items": {
              "$comment": "Generated from Point3 by @foxglove/message-schemas",
              "title": "Point3",
              "description": "A point representing a position in 3D space",
              "type": "object",
              "properties": {
                "x": {
                  "type": "number",
                  "description": "x coordinate position"
                },
                "y": {
                  "type": "number",
                  "description": "y coordinate position"
                },
                "z": {
                  "type": "number",
                  "description": "z coordinate position"
                }
              }
            },
            "description": "Points along the line"
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Solid color to use for the whole line. One of `color` or `colors` must be provided.",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          },
          "colors": {
            "type": "array",
            "items": {
              "$comment": "Generated from Color by @foxglove/message-schemas",
              "title": "Color",
              "description": "A color in RGBA format",
              "type": "object",
              "properties": {
                "r": {
                  "type": "number",
                  "description": "Red value between 0 and 1"
                },
                "g": {
                  "type": "number",
                  "description": "Green value between 0 and 1"
                },
                "b": {
                  "type": "number",
                  "description": "Blue value between 0 and 1"
                },
                "a": {
                  "type": "number",
                  "description": "Alpha value between 0 and 1"
                }
              }
            },
            "description": "Per-point colors (if specified, must have the same length as `points`). One of `color` or `colors` must be provided."
          },
          "indices": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Indexes into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data."
          }
        }
      },
      "description": "Line markers"
    },
    "triangles": {
      "type": "array",
      "items": {
        "$comment": "Generated from TrianglesMarker by @foxglove/message-schemas",
        "title": "TrianglesMarker",
        "description": "A marker representing a set of triangles or a surface tiled by triangles",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "type": {
            "title": "TriangleType: An enumeration indicating how input points should be interpreted to create triangles",
            "description": "Drawing primitive to use for triangles",
            "oneOf": [
              {
                "title": "TRIANGLE_LIST",
                "const": 0,
                "description": "0-1-2, 3-4-5, ..."
              },
              {
                "title": "TRIANGLE_STRIP",
                "const": 1,
                "description": "0-1-2, 1-2-3, 2-3-4, ..."
              },
              {
                "title": "TRIANGLE_FAN",
                "const": 2,
                "description": "0-1-2, 0-2-3, 0-3-4, ..."
              }
            ]
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Origin of triangles relative to reference frame",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "points": {
            "type": "array",
            "items": {
              "$comment": "Generated from Point3 by @foxglove/message-schemas",
              "title": "Point3",
              "description": "A point representing a position in 3D space",
              "type": "object",
              "properties": {
                "x": {
                  "type": "number",
                  "description": "x coordinate position"
                },
                "y": {
                  "type": "number",
                  "description": "y coordinate position"
                },
                "z": {
                  "type": "number",
                  "description": "z coordinate position"
                }
              }
            },
            "description": "Vertices to use for triangles"
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Solid color to use for the whole shape. One of `color` or `colors` must be provided.",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          },
          "colors": {
            "type": "array",
            "items": {
              "$comment": "Generated from Color by @foxglove/message-schemas",
              "title": "Color",
              "description": "A color in RGBA format",
              "type": "object",
              "properties": {
                "r": {
                  "type": "number",
                  "description": "Red value between 0 and 1"
                },
                "g": {
                  "type": "number",
                  "description": "Green value between 0 and 1"
                },
                "b": {
                  "type": "number",
                  "description": "Blue value between 0 and 1"
                },
                "a": {
                  "type": "number",
                  "description": "Alpha value between 0 and 1"
                }
              }
            },
            "description": "Per-vertex colors (if specified, must have the same length as `points`). One of `color` or `colors` should be provided."
          },
          "indices": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Indexes into the `points` and `colors` attribute arrays, which can be used to avoid duplicating attribute data."
          }
        }
      },
      "description": "Triangles markers"
    },
    "texts": {
      "type": "array",
      "items": {
        "$comment": "Generated from TextMarker by @foxglove/message-schemas",
        "title": "TextMarker",
        "description": "A marker representing a text label",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Position of the center of the text box and orientation of the text. Identity orientation means the text is oriented in the xy-plane and flows from -x to +x.",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "billboard": {
            "type": "boolean",
            "description": "Whether the text should respect `pose.orientation` (false) or always face the camera (true)"
          },
          "font_size": {
            "type": "number",
            "description": "Font size (height of one line of text)"
          },
          "scale_invariant": {
            "type": "boolean",
            "description": "Indicates whether `font_size` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)"
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Color of the text",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Text"
          }
        }
      },
      "description": "Text markers"
    },
    "models": {
      "type": "array",
      "items": {
        "$comment": "Generated from ModelMarker by @foxglove/message-schemas",
        "title": "ModelMarker",
        "description": "A marker representing a 3D model",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "object",
            "title": "Time",
            "properties": {
              "sec": {
                "type": "integer",
                "minimum": 0
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Timestamp of the marker"
          },
          "frame_id": {
            "type": "string",
            "description": "Frame of reference"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace into which the marker should be grouped. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "id": {
            "type": "string",
            "description": "Identifier for the marker. A marker will replace any prior marker on the same topic with the same `namespace` and `id`."
          },
          "lifetime": {
            "type": "object",
            "title": "Duration",
            "properties": {
              "sec": {
                "type": "integer"
              },
              "nsec": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            },
            "description": "Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted."
          },
          "frame_locked": {
            "type": "boolean",
            "description": "Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true)"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$comment": "Generated from KeyValuePair by @foxglove/message-schemas",
              "title": "KeyValuePair",
              "description": "An entry representing a key and its associated value",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key"
                },
                "value": {
                  "type": "string",
                  "description": "Value"
                }
              }
            },
            "description": "Additional user-provided metadata associated with the marker. Keys must be unique."
          },
          "pose": {
            "$comment": "Generated from Pose by @foxglove/message-schemas",
            "title": "Pose",
            "description": "Origin of model relative to reference frame",
            "type": "object",
            "properties": {
              "position": {
                "$comment": "Generated from Vector3 by @foxglove/message-schemas",
                "title": "Vector3",
                "description": "Point denoting position in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x coordinate length"
                  },
                  "y": {
                    "type": "number",
                    "description": "y coordinate length"
                  },
                  "z": {
                    "type": "number",
                    "description": "z coordinate length"
                  }
                }
              },
              "orientation": {
                "$comment": "Generated from Quaternion by @foxglove/message-schemas",
                "title": "Quaternion",
                "description": "Quaternion denoting orientation in 3D space",
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "x value"
                  },
                  "y": {
                    "type": "number",
                    "description": "y value"
                  },
                  "z": {
                    "type": "number",
                    "description": "z value"
                  },
                  "w": {
                    "type": "number",
                    "description": "w value"
                  }
                }
              }
            }
          },
          "scale": {
            "$comment": "Generated from Vector3 by @foxglove/message-schemas",
            "title": "Vector3",
            "description": "Scale factor to apply to the model along each axis",
            "type": "object",
            "properties": {
              "x": {
                "type": "number",
                "description": "x coordinate length"
              },
              "y": {
                "type": "number",
                "description": "y coordinate length"
              },
              "z": {
                "type": "number",
                "description": "z coordinate length"
              }
            }
          },
          "color": {
            "$comment": "Generated from Color by @foxglove/message-schemas",
            "title": "Color",
            "description": "Solid color to use for the whole model. If `use_embedded_materials` is true, this color is blended on top of the embedded material color.",
            "type": "object",
            "properties": {
              "r": {
                "type": "number",
                "description": "Red value between 0 and 1"
              },
              "g": {
                "type": "number",
                "description": "Green value between 0 and 1"
              },
              "b": {
                "type": "number",
                "description": "Blue value between 0 and 1"
              },
              "a": {
                "type": "number",
                "description": "Alpha value between 0 and 1"
              }
            }
          },
          "use_embedded_materials": {
            "type": "boolean",
            "description": "Whether to use materials embedded in the model, or only the `color`"
          },
          "url": {
            "type": "string",
            "description": "URL pointing to model file. Either `url` or `mime_type` and `data` should be provided."
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of embedded model (e.g. `model/gltf-binary`). Either `url` or `mime_type` and `data` should be provided."
          },
          "data": {
            "type": "string",
            "contentEncoding": "base64",
            "description": "Embedded model. Either `url` or `mime_type` and `data` should be provided."
          }
        }
      },
      "description": "Model markers"
    }
  }
}
