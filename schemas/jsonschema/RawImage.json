{
  "title": "foxglove.RawImage",
  "description": "A raw image",
  "$comment": "Generated by https://github.com/foxglove/foxglove-sdk",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of image"
    },
    "frame_id": {
      "type": "string",
      "description": "Frame of reference for the image. The origin of the frame is the optical center of the camera. +x points to the right in the image, +y points down, and +z points into the plane of the image."
    },
    "width": {
      "type": "integer",
      "minimum": 0,
      "description": "Image width in pixels"
    },
    "height": {
      "type": "integer",
      "minimum": 0,
      "description": "Image heigh in pixels"
    },
    "encoding": {
      "type": "string",
      "description": "Encoding of the raw image data"
    },
    "step": {
      "type": "integer",
      "minimum": 0,
      "description": "Byte length of a single row. This is usually some multiple of `width` depending on the encoding, but can be greater to incorporate padding."
    },
    "data": {
      "type": "string",
      "contentEncoding": "base64",
      "description": "Raw image data.\n\nPixels should be encoded in one of the supported encodings:\n- `yuv422`,  `uyvy`: [Y'UV](https://en.wikipedia.org/wiki/Y%E2%80%B2UV), one byte per component.\n  U and V values are shared between horizontal pairs of pixels. Each pair of output pixels is encoded as [U, Y1, V, Y2].\n  `step` must be greater than or equal to `width` * 2.\n- `yuv422_yuy2`,  `yuyv`: [Y'UV](https://en.wikipedia.org/wiki/Y%E2%80%B2UV), one byte per component.\n  U and V values are shared between horizontal pairs of pixels. Each pair of output pixels is encoded as [Y1, U, Y2, V].\n  `step` must be greater than or equal to `width` * 2.\n- `rgb8`: 8-bit RGB. Each output pixel is encoded as [R, G, B].\n  `step` must be greater than or equal to `width` * 3.\n- `rgba8`: 8-bit RGB + Alpha. Each output pixel is encoded as [R, G, B, Alpha].\n  `step` must be greater than or equal to `width` * 4.\n- `bgr8`: RGB, one byte per component. Each output pixel is encoded as [B, G, R].\n  `step` must be greater than or equal to `width` * 3.\n- `bgra8`, `8UC3`: RGB + Alpha, one byte per component. Each output pixel is encoded as [B, G, R, Alpha].\n  `step` must be greater than or equal to `width` * 4.\n- `32FC1`: 32-bit little-endian IEEE754 float brightness values, from 0.0 (black) to 1.0 (white).\n  `step` must be greater than or equal to `width` * 4.\n- `bayer_rggb8`, `bayer_bggr8`, `bayer_rggb8`, `bayer_gbrg8`, `bayer_grgb8`: 8-bit RGB 2x2 Bayer pattern.\n  The order of the four letters after `bayer_` determine the layout, so for `bayer_wxyz8` the pattern is:\n  w | x\n  - | -\n  y | z\n  `step` must be greater than or equal to `width`.\n- `mono8`, `8UC1`: 8-bit brightness values from 0 (black) to 255 (white).\n  `step` must be greater than or equal to `width`.\n- `mono16`, `16UC1`: 16-bit values whose effect is determined in [Image panel color mode settings](https://docs.foxglove.dev/docs/visualization/panels/image#general).\n  `step` must be greater than or equal to `width` * 2.\n"
    }
  }
}
